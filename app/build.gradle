apply plugin: 'com.android.application'

android {
    compileSdkVersion project.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.fabinpaul.notizia"
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode project.ext.versionCode
        versionName project.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "NEWS_API_KEY", NEWS_API_KEY
        buildConfigField "String", "NEWS_BASE_URL", "\"https://newsapi.org/v2/\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$androidSupportVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayout"
    //Retrofit dependencies
    implementation "com.squareup.retrofit2:retrofit:$retrofit2"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxJava2Adapter"
    implementation "com.squareup.retrofit2:converter-gson:$gsonConverter"
    //RxJava dependencies
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid"
    implementation "io.reactivex.rxjava2:rxjava:$rxJava2"
    testImplementation "junit:junit:$junit"
    //Dagger dependencies
    implementation "com.google.dagger:dagger:$dagger2"
    implementation "com.google.dagger:dagger-android:$dagger2"
    implementation "com.google.dagger:dagger-android-support:$dagger2"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger2"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger2"
    implementation("com.squareup.picasso:picasso:$picasso", {
        exclude group: 'com.android.support', module: 'exifinterface'
    })
    testImplementation "org.mockito:mockito-core:$mockito"
    androidTestImplementation "com.android.support.test:runner:$testRunner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso"
}
